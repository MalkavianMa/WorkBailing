//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace 雷电定位测试工具.FaultRecordService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FaultRecordServicePortBinding", Namespace="http://service.sduept.com/")]
    public partial class FaultRecordServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getFaultRecordByStationNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFaultRecordByMainstationNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFaultRecordByDeviceOneNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFaultRecordByRecorderNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FaultRecordServiceService() {
            this.Url = global::雷电定位测试工具.Properties.Settings.Default.雷电定位测试工具_FaultRecordService_FaultRecordServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getFaultRecordByStationNameCompletedEventHandler getFaultRecordByStationNameCompleted;
        
        /// <remarks/>
        public event getFaultRecordByMainstationNameCompletedEventHandler getFaultRecordByMainstationNameCompleted;
        
        /// <remarks/>
        public event getFaultRecordByDeviceOneNameCompletedEventHandler getFaultRecordByDeviceOneNameCompleted;
        
        /// <remarks/>
        public event getFaultRecordByRecorderNameCompletedEventHandler getFaultRecordByRecorderNameCompleted;
        
        /// <remarks/>
        public event getFileCompletedEventHandler getFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.sduept.com/", ResponseNamespace="http://service.sduept.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public faultRecordRtn getFaultRecordByStationName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] time arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] time arg2) {
            object[] results = this.Invoke("getFaultRecordByStationName", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((faultRecordRtn)(results[0]));
        }

       

        /// <remarks/>
        public void getFaultRecordByStationNameAsync(string arg0, time arg1, time arg2) {
            this.getFaultRecordByStationNameAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getFaultRecordByStationNameAsync(string arg0, time arg1, time arg2, object userState) {
            if ((this.getFaultRecordByStationNameOperationCompleted == null)) {
                this.getFaultRecordByStationNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFaultRecordByStationNameOperationCompleted);
            }
            this.InvokeAsync("getFaultRecordByStationName", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getFaultRecordByStationNameOperationCompleted, userState);
        }
        
        private void OngetFaultRecordByStationNameOperationCompleted(object arg) {
            if ((this.getFaultRecordByStationNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFaultRecordByStationNameCompleted(this, new getFaultRecordByStationNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.sduept.com/", ResponseNamespace="http://service.sduept.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public faultRecordRtn getFaultRecordByMainstationName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] time arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] time arg2) {
            object[] results = this.Invoke("getFaultRecordByMainstationName", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((faultRecordRtn)(results[0]));
        }
        
        /// <remarks/>
        public void getFaultRecordByMainstationNameAsync(string arg0, time arg1, time arg2) {
            this.getFaultRecordByMainstationNameAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getFaultRecordByMainstationNameAsync(string arg0, time arg1, time arg2, object userState) {
            if ((this.getFaultRecordByMainstationNameOperationCompleted == null)) {
                this.getFaultRecordByMainstationNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFaultRecordByMainstationNameOperationCompleted);
            }
            this.InvokeAsync("getFaultRecordByMainstationName", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getFaultRecordByMainstationNameOperationCompleted, userState);
        }
        
        private void OngetFaultRecordByMainstationNameOperationCompleted(object arg) {
            if ((this.getFaultRecordByMainstationNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFaultRecordByMainstationNameCompleted(this, new getFaultRecordByMainstationNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.sduept.com/", ResponseNamespace="http://service.sduept.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public faultRecordRtn getFaultRecordByDeviceOneName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] time arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] time arg2) {
            object[] results = this.Invoke("getFaultRecordByDeviceOneName", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((faultRecordRtn)(results[0]));
        }
        
        /// <remarks/>
        public void getFaultRecordByDeviceOneNameAsync(string arg0, time arg1, time arg2) {
            this.getFaultRecordByDeviceOneNameAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getFaultRecordByDeviceOneNameAsync(string arg0, time arg1, time arg2, object userState) {
            if ((this.getFaultRecordByDeviceOneNameOperationCompleted == null)) {
                this.getFaultRecordByDeviceOneNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFaultRecordByDeviceOneNameOperationCompleted);
            }
            this.InvokeAsync("getFaultRecordByDeviceOneName", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getFaultRecordByDeviceOneNameOperationCompleted, userState);
        }
        
        private void OngetFaultRecordByDeviceOneNameOperationCompleted(object arg) {
            if ((this.getFaultRecordByDeviceOneNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFaultRecordByDeviceOneNameCompleted(this, new getFaultRecordByDeviceOneNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.sduept.com/", ResponseNamespace="http://service.sduept.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public faultRecordRtn getFaultRecordByRecorderName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] time arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] time arg2) {
            object[] results = this.Invoke("getFaultRecordByRecorderName", new object[] {
                        arg0,
                        arg1,
                        arg2});
            return ((faultRecordRtn)(results[0]));
        }
        
        /// <remarks/>
        public void getFaultRecordByRecorderNameAsync(string arg0, time arg1, time arg2) {
            this.getFaultRecordByRecorderNameAsync(arg0, arg1, arg2, null);
        }
        
        /// <remarks/>
        public void getFaultRecordByRecorderNameAsync(string arg0, time arg1, time arg2, object userState) {
            if ((this.getFaultRecordByRecorderNameOperationCompleted == null)) {
                this.getFaultRecordByRecorderNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFaultRecordByRecorderNameOperationCompleted);
            }
            this.InvokeAsync("getFaultRecordByRecorderName", new object[] {
                        arg0,
                        arg1,
                        arg2}, this.getFaultRecordByRecorderNameOperationCompleted, userState);
        }
        
        private void OngetFaultRecordByRecorderNameOperationCompleted(object arg) {
            if ((this.getFaultRecordByRecorderNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFaultRecordByRecorderNameCompleted(this, new getFaultRecordByRecorderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.sduept.com/", ResponseNamespace="http://service.sduept.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public fileRtn getFile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1) {
            object[] results = this.Invoke("getFile", new object[] {
                        arg0,
                        arg1});
            return ((fileRtn)(results[0]));
        }
        
        /// <remarks/>
        public void getFileAsync(long arg0, string arg1) {
            this.getFileAsync(arg0, arg1, null);
        }
        
        /// <remarks/>
        public void getFileAsync(long arg0, string arg1, object userState) {
            if ((this.getFileOperationCompleted == null)) {
                this.getFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFileOperationCompleted);
            }
            this.InvokeAsync("getFile", new object[] {
                        arg0,
                        arg1}, this.getFileOperationCompleted, userState);
        }
        
        private void OngetFileOperationCompleted(object arg) {
            if ((this.getFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFileCompleted(this, new getFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.sduept.com/")]
    public partial class time {
        
        private int dayField;
        
        private int hourField;
        
        private int minuteField;
        
        private int monthField;
        
        private int msecondField;
        
        private int secondField;
        
        private int yearField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int hour {
            get {
                return this.hourField;
            }
            set {
                this.hourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int minute {
            get {
                return this.minuteField;
            }
            set {
                this.minuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int msecond {
            get {
                return this.msecondField;
            }
            set {
                this.msecondField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int second {
            get {
                return this.secondField;
            }
            set {
                this.secondField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.sduept.com/")]
    public partial class fileRtn {
        
        private byte[] bytesField;
        
        private string errorField;
        
        private int rtnField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
        public byte[] bytes {
            get {
                return this.bytesField;
            }
            set {
                this.bytesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int rtn {
            get {
                return this.rtnField;
            }
            set {
                this.rtnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.sduept.com/")]
    public partial class faultRecord {
        
        private string deviceOneNameField;
        
        private time faultTimeField;
        
        private long idField;
        
        private float locationField;
        
        private string mainstationNameField;
        
        private string phaseField;
        
        private string recorderNameField;
        
        private int recorderTypeField;
        
        private string stationNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string deviceOneName {
            get {
                return this.deviceOneNameField;
            }
            set {
                this.deviceOneNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public time faultTime {
            get {
                return this.faultTimeField;
            }
            set {
                this.faultTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string mainstationName {
            get {
                return this.mainstationNameField;
            }
            set {
                this.mainstationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string phase {
            get {
                return this.phaseField;
            }
            set {
                this.phaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string recorderName {
            get {
                return this.recorderNameField;
            }
            set {
                this.recorderNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int recorderType {
            get {
                return this.recorderTypeField;
            }
            set {
                this.recorderTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string stationName {
            get {
                return this.stationNameField;
            }
            set {
                this.stationNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.sduept.com/")]
    public partial class faultRecordRtn {
        
        private string errorField;
        
        private faultRecord[] faultRecordsField;
        
        private int rtnField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("faultRecords", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public faultRecord[] faultRecords {
            get {
                return this.faultRecordsField;
            }
            set {
                this.faultRecordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int rtn {
            get {
                return this.rtnField;
            }
            set {
                this.rtnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getFaultRecordByStationNameCompletedEventHandler(object sender, getFaultRecordByStationNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFaultRecordByStationNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFaultRecordByStationNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public faultRecordRtn Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((faultRecordRtn)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getFaultRecordByMainstationNameCompletedEventHandler(object sender, getFaultRecordByMainstationNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFaultRecordByMainstationNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFaultRecordByMainstationNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public faultRecordRtn Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((faultRecordRtn)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getFaultRecordByDeviceOneNameCompletedEventHandler(object sender, getFaultRecordByDeviceOneNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFaultRecordByDeviceOneNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFaultRecordByDeviceOneNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public faultRecordRtn Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((faultRecordRtn)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getFaultRecordByRecorderNameCompletedEventHandler(object sender, getFaultRecordByRecorderNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFaultRecordByRecorderNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFaultRecordByRecorderNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public faultRecordRtn Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((faultRecordRtn)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void getFileCompletedEventHandler(object sender, getFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public fileRtn Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((fileRtn)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591